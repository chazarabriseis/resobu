import dynamoDbFunctions as ddf
from pprint import pprint

if __name__ == '__main__':
    # # test to fetch the People List
    body = {'requestType': "fetchList", 'userSubId': "123", 'tableName': "PeopleTable"}
    # body = {'requestType': "fetchList", 'userSubId': "123", 'tableName': "SocialButterflyChatsTable"}

    # # test to put an item that does already exist
    # body = {'requestType': "insertRow", 'userSubId': "123", 'tableName': "PeopleTable", 'email': "14@test.com"}

    # # test to put an item that does not already exist
    # body = {'requestType': "insertRow", 'userSubId': "123",  'tableName': "PeopleTable", 'email': "101@test.com"}
    # body = {'requestType': "insertRow", 'userSubId': "123", 'tableName': "SocialButterflyChatsTable",
    # "groupType": "Business", "info" : { "chats": [{"id": '2021-01-01@11:30', "date": "2021-01-01", "time": '11:30',
    # "duration": '30'},{"id": '2021-01-01@14:30', "date": "2021-01-01", "time": '14:30', "duration": '30'}],
    # "inviteText": '<p>Hello $NAME$,</p>', "todoList": {"enteredEmails": False, "personalisedInvite": False,
    # "scheduledMeeting": False, "choseMeetingTime": False, "activated": False}, "activated": False}}

    # # test to put a list of items

    # # test to update an existing item updateRow
    # body = {'requestType': "updateRow", 'userSubId': "123", 'tableName': "PeopleTable", 'email': '2@test.com',
    #        'changes': {'projectColleagues': ['1@test.com']}}
    # body = {'requestType': "updateRow", 'userSubId': "123", 'tableName': "SocialButterflyChatsTable",
    #         "groupType": "Business", "changes": {"info": {"chats": [{"id": '2021-01-01@11:30', "date": "2021-01-01", "time": '11:30',
    #         "duration": '30'},{"id": '2021-01-01@14:30', "date": "2021-01-01", "time": '14:30', "duration": '30'}],
    #         "inviteText": '<p>Hello $NAME$,</p>', "todoList": {"enteredEmails": False, "personalisedInvite": False,
    #         "scheduledMeeting": False, "choseMeetingTime": False, "activated": False}, "activated": True}}}

    # # test to update an item that doesn't exist

    # # test to delete an existing item
    # body = {'requestType': "deleteRow", 'userSubId': "123", 'tableName': "PeopleTable", 'email': "6@test.com"}

    # # test to delete an item that doesn't exist

    lambdaResponse = ddf.lambda_handler(body)
    print("Got following response:")
    pprint(lambdaResponse, sort_dicts=False)
